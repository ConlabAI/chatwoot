name: Publish Chatwoot CE docker images
on:
  push:
    branches:
      - conlab-master
    tags:
      - v*
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GIT_REF: ${{ github.head_ref || github.ref_name }} # ref_name to get tags/branches
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Cache key based on Dockerfile, Gemfile.lock, yarn.lock, package.json to avoid frequent cache misses. 
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Dockerfile', '**/Gemfile.lock', '**/yarn.lock', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-buildx-


      - name: Strip enterprise code
        run: |
          rm -rf enterprise
          rm -rf spec/enterprise

      - name: Set Chatwoot edition
        run: |
          echo -en '\nENV CW_EDITION="ce"' >> docker/Dockerfile

      - name: set docker tag
        run: |
          BRANCH_REPLACED=$(echo $GIT_REF | sed 's/\//-/g')
          echo "DOCKER_TAG=conlab/chatwoot:$BRANCH_REPLACED" >> $GITHUB_ENV

      - name: replace docker tag if conlab-master
        if: github.ref_name == 'conlab-master'
        run: |
          echo "DOCKER_TAG=conlab/chatwoot:latest" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ env.DOCKER_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

  deploy-dev-server:
    needs: build
    if: (github.event_name == 'push' && github.ref == 'refs/heads/conlab-master') || (github.event_name == 'pull_request' && github.base_ref == 'conlab-master')
    runs-on: ubuntu-latest
    steps:
      - name: Call webhook for deployment
        run: |
          curl -X POST -H "Content-Type: application/json" -d '{"event":"deploy", "branch":"${{ github.ref }}"}' ${{ secrets.DEPLOY_TO_DEV_WEBHOOK_URL }} 
